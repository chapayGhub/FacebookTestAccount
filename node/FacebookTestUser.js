// Generated by CoffeeScript 1.6.1
(function() {
  var FacebookTestUserManager, appID, appSecret, http, https, m, open_url;

  http = require('http');

  https = require('https');

  open_url = function(url, callback) {
    var _this = this;
    return https.get(url, function(resp) {
      var data;
      resp.setEncoding('utf8');
      data = '';
      resp.on('data', function(chunk) {
        return data += chunk;
      });
      resp.on('end', function() {
        return callback(data);
      });
    });
  };

  FacebookTestUserManager = (function() {

    function FacebookTestUserManager(facebookAppID, facebookSecret) {
      this.facebookAppID = facebookAppID;
      this.facebookSecret = facebookSecret;
      this.appAccessToken = null;
    }

    FacebookTestUserManager.prototype._obtain_app_access_token = function(callback) {
      var url,
        _this = this;
      url = 'https://graph.facebook.com/oauth/access_token?';
      url += 'client_id=' + this.facebookAppID;
      url += '&client_secret=' + this.facebookSecret;
      url += '&grant_type=client_credentials';
      return open_url(url, function(data) {
        _this.appAccessToken = data.substr('access_token='.length);
        if (callback != null) {
          callback.call(_this, _this.appAccessToken);
        }
      });
    };

    FacebookTestUserManager.prototype._create_test_account = function(callback, username) {
      var url,
        _this = this;
      if (username == null) {
        username = 'Test';
      }
      url = "https://graph.facebook.com/" + this.facebookAppID + "/accounts/test-users?";
      url += '&installed=true';
      url += '&name=' + username;
      url += '&locale=en_US';
      url += '&method=post';
      url += '&access_token=' + this.appAccessToken;
      url += '&permissions=email,publish_stream,user_about_me,publish_actions';
      open_url(url, function(data) {
        if (callback != null) {
          callback(JSON.parse(data));
        }
      });
    };

    FacebookTestUserManager.prototype.create_test_account = function(callback, username) {
      if (username == null) {
        username = 'Test';
      }
      if (!this.appAccessToken) {
        this._obtain_app_access_token(function() {
          this._create_test_account(callback, username);
        });
      } else {
        this._create_test_account(callback, username);
      }
    };

    FacebookTestUserManager.prototype._delete_test_account = function(user_id, callback) {
      var url,
        _this = this;
      url = "https://graph.facebook.com/" + user_id + "/?";
      url += 'method=delete';
      url += '&access_token=' + this.appAccessToken;
      open_url(url, function(data) {
        if (callback != null) {
          callback(data === 'true');
        }
      });
    };

    FacebookTestUserManager.prototype.delete_test_account = function(user_id, callback) {
      if (!this.appAccessToken) {
        this._obtain_app_access_token(function() {
          this.delete_test_account(user_id, callback);
        });
      } else {
        this._delete_test_account(user_id, callback);
      }
    };

    FacebookTestUserManager.prototype._list_test_users = function(callback) {
      var url,
        _this = this;
      url = "https://graph.facebook.com/" + this.facebookAppID + "/accounts/test-users";
      url += '?access_token=' + this.appAccessToken;
      open_url(url, function(data) {
        if (callback) {
          callback(JSON.parse(data)['data']);
        }
      });
    };

    FacebookTestUserManager.prototype.list_test_users = function(callback) {
      if (!this.appAccessToken) {
        this._obtain_app_access_token(function() {
          this._list_test_users(callback);
        });
      } else {
        this._list_test_users(callback);
      }
    };

    FacebookTestUserManager.prototype._delete_all_test_users = function(callback) {
      var _this = this;
      this.list_test_users(function(users) {
        var user, _i, _len;
        for (_i = 0, _len = users.length; _i < _len; _i++) {
          user = users[_i];
          _this.delete_test_account(user['id']);
        }
      });
    };

    FacebookTestUserManager.prototype.delete_all_test_users = function(callback) {
      if (!this.appAccessToken) {
        this._obtain_app_access_token(function() {
          this._delete_all_test_users(callback);
        });
      } else {
        this._delete_all_test_users(callback);
      }
    };

    return FacebookTestUserManager;

  })();

  if (require.main === module) {
    appID = '181603781919524';
    appSecret = 'f075c9b716d5b48d04d40275a92c7fc7';
    m = new FacebookTestUserManager(appID, appSecret);
    m.create_test_account(function(user) {
      var user_id;
      user_id = user['id'];
      console.log(user_id);
      return m.delete_test_account(user_id, function(x) {
        return console.log(x);
      });
    });
    m.list_test_users(function(x) {
      return console.log(x);
    });
    m.delete_all_test_users();
  }

}).call(this);
